# docker-compose.yml

# Docker Compose 파일 형식의 버전을 정의합니다. '3.8'은 널리 사용되는 안정적인 버전입니다.
version: "3.8"

# 실행하려는 서비스(컨테이너)들을 정의합니다.
services:
  # 서비스의 이름을 'db'로 지정합니다. 이 이름으로 다른 컨테이너에서 접근할 수 있습니다.
  db:
    # 사용할 Docker 이미지를 지정합니다. 'postgres:15'는 PostgreSQL 15 버전을 의미합니다.
    # 특정 버전(예: 14, 13)을 사용하거나 'latest'를 사용할 수도 있습니다.
    image: postgres:15

    # 컨테이너의 이름을 지정합니다. 지정하지 않으면 Docker가 임의의 이름을 생성합니다.
    container_name: my_postgres_db

    # 컨테이너가 항상 재시작되도록 설정합니다.
    # 'unless-stopped'는 수동으로 중지하지 않는 한, Docker 데몬이 시작될 때마다 컨테이너를 재시작시킵니다.
    restart: unless-stopped

    # 컨테이너 내부의 환경 변수를 설정합니다.
    # PostgreSQL 이미지는 이 변수들을 사용하여 데이터베이스를 초기화합니다.
    environment:
      POSTGRES_USER: time # 데이터베이스 사용자 이름을 설정합니다.
      POSTGRES_PASSWORD: attack # 데이터베이스 사용자 비밀번호를 설정합니다.
      POSTGRES_DB: bobple # 생성할 데이터베이스의 이름을 설정합니다.
      TZ: Asia/Seoul
    # 호스트 머신과 컨테이너의 포트를 연결합니다.
    # 형식: "호스트_포트:컨테이너_포트"
    # 아래 설정은 호스트의 5432 포트로 오는 요청을 컨테이너의 5432 포트로 전달합니다.
    ports:
      - "5432:5432"

    # 데이터를 영구적으로 저장하기 위해 호스트 머신의 볼륨과 컨테이너 내부의 디렉토리를 연결합니다.
    # 이렇게 설정하면 컨테이너를 삭제하고 다시 생성해도 데이터가 유지됩니다.
    # 형식: "볼륨_이름:/컨테이너/데이터/경로"
    volumes:
      - postgres_data:/var/lib/postgresql/data
# Docker가 관리하는 볼륨을 정의합니다.
volumes:
  postgres_data:
